AC_INIT(trq_deque.c)

AC_ARG_PROGRAM

dnl Define our own header notice with own copyright
define([AC_INIT_NOTICE],
[#### Configuration script for deque library.
#### Generated automatically using autoconf version] AC_ACVERSION [
#### Copyright (C) 1995-1997 Timo J. Rinne
#### All rights reserved.  See file COPYRIGHT for details.
####
#### $Id: configure.in,v 1.1.1.1 2001/10/09 22:29:31 tri Exp $
####
### Don't edit this script!
### This script was automatically generated by the `autoconf' program
### from the file `./configure.in'.
### To rebuild it, execute the command
###	autoconf
### in the this directory.  You must have autoconf version 2.12 or later.

### For usage, run `./configure --help'
### For more detailed information on building and installing the library,
### read the file `INSTALL'.
])

AC_PREREQ(2.12)dnl
define([AC_TRY_RUN],[AC_TRY_RUN_NATIVE([$1], [$2], [$3])])dnl

AM_INIT_AUTOMAKE(trq,1.0)

AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_RANLIB

AC_CHECK_FUNCS(gettimeofday usleep sleep random rand srandomdev)
AC_CHECK_HEADERS(stddef.h stdlib.h unistd.h string.h strings.h sys/types.h types.h sys/time.h time.h malloc.h)

gen_trq_x_c_flags="-big-object"
define_trq_small_objects="#define __TRQ__SMALL__OBJECTS__ 0"

AC_MSG_CHECKING(whether to compile smaller but less efficient library objects)
AC_ARG_ENABLE(small-objects,
[  --enable-small-objects  Make library objects smaller but less efficient.],
[ case "$enableval" in
  yes)
    AC_MSG_RESULT(yes)
    gen_trq_x_c_flags="-small-object"
    define_trq_small_objects="#define __TRQ__SMALL__OBJECTS__ 1"
    ;;
  *)
    AC_MSG_RESULT(no)
    gen_trq_x_c_flags="-big-object"
    define_trq_small_objects="#define __TRQ__SMALL__OBJECTS__ 0"
    ;;
  esac ], AC_MSG_RESULT(no)
)

define_trq_use_functions_default="#define TRQ_USE_FUNCTIONS 1"
AC_MSG_CHECKING(whether to use inline functions as default)
AC_ARG_ENABLE(trq-inlines,
[  --enable-trq-inlines  Use inline versions of trq operations as default.
                        Default is to use real functions instead of inlined
                        ones.],
[ case "$enableval" in
  yes)
    AC_MSG_RESULT(yes)
    define_trq_use_functions_default="#define TRQ_USE_FUNCTIONS 0"
    ;;
  *)
    AC_MSG_RESULT(no)
    define_trq_use_functions_default="#define TRQ_USE_FUNCTIONS 1"
    ;;
  esac ], AC_MSG_RESULT(no)
)

AC_MSG_CHECKING(whether to always use real functions instead of inlines and macros)
AC_ARG_ENABLE(trq-macros,
[  --disable-trq-macros  Use real function version as default instead of
                        inline functions and macros.  Overrides
                        --enable-trq-inlines.  If trq interfaces are
                        extensively used in the program, this flag may
                        produce somewhat smaller although slower code.
                        Usually this option is not a good idea.],
[ case "$enableval" in
  no)
    AC_MSG_RESULT(yes)
    define_trq_use_functions_default="#define TRQ_USE_FUNCTIONS 2"
    ;;
  *)
    AC_MSG_RESULT(no)
    ;;
  esac ], AC_MSG_RESULT(no)
)

if test "$ac_cv_prog_cc_cross" = "yes"; then
  echo ""
  echo "*** WARNING *** Since you are cross compiling, type sizes cannot"
  echo "*** WARNING *** be reliably determined by running test programs."
  echo "*** WARNING *** Guessing suitable integral type for pointers to be"
  echo "*** WARNING *** unsigned int.  It is propably ok and running test"
  echo "*** WARNING *** programs will detect, if this is not the case."
  echo "*** WARNING *** BE SURE THAT YOU RUN TESTS BEFORE USING THE LIBRARY."
  echo ""
  type_of_trq_p_i_t="unsigned long";
else
  dnl define SIZEOF_TYPE
  AC_CHECK_SIZEOF(void *, 0)
  if test "$ac_cv_sizeof_void_p" = 0; then
    echo ""
    echo "*** WARNING *** Configure type size tests are not working."
    echo "*** WARNING *** Please examine config.log for compilation errors."
    echo "*** WARNING *** Guessing suitable integral type for pointers to be"
    echo "*** WARNING *** unsigned int.  It is propably ok and running test"
    echo "*** WARNING *** programs will detect, if this is not the case."
    echo "*** WARNING *** BE SURE THAT YOU RUN TESTS BEFORE USING THE LIBRARY."
    echo ""
    type_of_trq_p_i_t="unsigned long";
  else
    AC_CHECK_SIZEOF(short, 0)
    AC_CHECK_SIZEOF(int, 0)
    AC_CHECK_SIZEOF(long, 0)
    AC_CHECK_SIZEOF(long long, 0)
    if test "$ac_cv_sizeof_long" = "$ac_cv_sizeof_void_p" ; then
      type_of_trq_p_i_t="unsigned long"
    elif test "$ac_cv_sizeof_int" = "$ac_cv_sizeof_void_p" ; then
      type_of_trq_p_i_t="unsigned int"
    elif test "$ac_cv_sizeof_long_long" = "$ac_cv_sizeof_void_p" ; then
      type_of_trq_p_i_t="unsigned long long"
    elif test "$ac_cv_sizeof_short" = "$ac_cv_sizeof_void_p" ; then
      type_of_trq_p_i_t="unsigned short"
    else
      echo ""
      echo "*** WARNING *** Configure type size tests mystically broken."
      echo "*** WARNING *** Please examine config.log for compilation errors."
      echo "*** WARNING *** Guessing suitable integral type for pointers to be"
      echo "*** WARNING *** unsigned int.  It is propably ok and running test"
      echo "*** WARNING *** programs will detect, if this is not the case."
      echo "*** WARNING *** RUN TEST PROGRAMS BEFORE USING THE LIBRARY."
      echo ""
      type_of_trq_p_i_t="unsigned long";
    fi
  fi
fi

echo "Using type $type_of_trq_p_i_t as pointer size integer type."

if test "$ac_cv_header_stddef_h" = yes ; then
    include_sttdef_h='#include <stddef.h>'
else
    include_sttdef_h='/* #include <stddef.h> */'
fi

AC_C_INLINE
if test "x$ac_cv_c_inline" = "x" ; then
    define_trq_inline_function="#undef __TRQ__INLINE__FUNCTION__"
    echo "Inline functions ARE NOT enabled for user programs."
else
    define_trq_inline_function="#define __TRQ__INLINE__FUNCTION__ $ac_cv_c_inline"
    echo "Inline functions ARE enabled for user programs."
fi

AC_SUBST(include_sttdef_h)
AC_SUBST(type_of_trq_p_i_t)
AC_SUBST(define_trq_inline_function)
AC_SUBST(define_trq_small_objects)
AC_SUBST(gen_trq_x_c_flags)
AC_SUBST(define_trq_use_functions_default)

AC_OUTPUT(Makefile trqtest/Makefile tests/Makefile trq_conf.h)
